# nb -v run driver=cql yaml=cql-bank_operations_by_iban tags=phase:schema host=dsehost
scenarios:
  default:
    - run driver=cql tags==phase:schema threads==1 cycles==UNDEF
    - run driver=cql tags==phase:rampup cycles===TEMPLATE(rampup-cycles,10000000) threads=auto
    - run driver=cql tags==phase:main cycles===TEMPLATE(main-cycles,10000000) threads=auto
bindings:
  iban: Hash(); Add(1); Uniform(0,<<partsize:1000000>>)->int; ToString() -> String
  operation_id: Mod(<<sources:10000>>); ToHashedUUID() -> java.util.UUID
  account_code: HashedLineToString('data/variable_words.txt') #HashedFileExtractToString('data/lorem_ipsum_full.txt',800,1200) ==> return a fragment from adventures.txt between 800 and 1200 characters long"
  label: HashedLineToString('data/variable_words.txt')
  date_operation: Hash(); ToDate() -> java.util.Date
  date_validation: Hash(); ToDate() -> java.util.Date
  date_correction: Hash(); ToDate() -> java.util.Date
  amount: Normal(0.0,100.0); Add(1000.0) -> double
  original_operation_id: Mod(<<sources:10000>>); ToHashedUUID() -> java.util.UUID
  #station_id: Div(<<sources:10000>>); Mod(<<stations:100>>); ToHashedUUID() -> java.util.UUID
  #part_layout: Div(<<partsize:1000000>>); ToString() -> String
  #clust_layout: Mod(<<partsize:1000000>>); ToString() -> String
  #data: HashedFileExtractToString('data/lorem_ipsum_full.txt',50,150)
  ## for read
  #limit: Uniform(1,10) -> int
  #part_read: Uniform(0,<<partcount:100>>)->int; ToString() -> String
  #clust_read: Add(1); Uniform(0,<<partsize:1000000>>)->int; ToString() -> String
  #part_write: Hash(); Uniform(0,<<partcount:100>>)->int; ToString() -> String
  #clust_write: Hash(); Add(1); Uniform(0,<<partsize:1000000>>)->int; ToString() -> String
  #data_write: Hash(); HashedFileExtractToString('data/lorem_ipsum_full.txt',50,150) -> String
blocks:
  - tags:
      phase: schema
    params:
      prepared: false
    statements:
      - create-keyspace: |
          CREATE KEYSPACE IF NOT EXISTS <<keyspace:bench>>
          WITH replication = {'class': 'NetworkTopologyStrategy', 'Solr':'<<rf:3>>'}
          AND durable_writes = true;
        tags:
          name: create-keyspace
      - create-table : |
          CREATE TABLE IF NOT EXISTS <<keyspace:bench>>.<<table:bank_operations_by_iban>> (
          iban text,
          operation_id uuid,
          account_code text,
          label text,
          date_operation timestamp,
          date_validation timestamp,
          date_correction timestamp,
          amount double,
          original_operation_id uuid,
          PRIMARY KEY ((iban), operation_id)
          );
        tags:
          name: create-table
      - truncate-table: |
          TRUNCATE TABLE <<keyspace:bench>>.<<table:bank_operations_by_iban>>;
        tags:
          name: truncate-table
      - create-index: |
          CREATE SEARCH INDEX ON <<keyspace:bench>>.<<table:bank_operations_by_iban>>;
        tags:
          name: create-index
  - tags:
      phase: rampup
    params:
      cl: <<write_cl:LOCAL_QUORUM>>
    statements:
      - insert-rampup: |
          INSERT INTO  <<keyspace:bench>>.<<table:bank_operations_by_iban>>
          (iban, operation_id, account_code, label, date_operation,
            date_validation, date_correction, amount, original_operation_id)
          VALUES
          ({iban}, {operation_id}, {account_code}, {label}, {date_operation},
            {date_validation}, {date_correction}, {amount}, {original_operation_id})
        idempotent: true
        tags:
          name: insert-rampup
  - tags:
      phase: main
      type: read
    params:
      ratio: <<read_ratio:1>>
      cl: <<read_cl:LOCAL_QUORUM>>
    statements:
      - main-select-part: |
          SELECT * FROM <<keyspace:bench>>.<<table:bank_operations_by_iban>>
          WHERE iban={iban}
          LIMIT <<limit:10>>
        tags:
          name: main-select-part
  - tags:
      phase: main
      type: read
    params:
      ratio: <<read_ratio:3>>
      cl: <<read_cl:LOCAL_QUORUM>>
    statements:
      - main-select-row: |
          SELECT * FROM <<keyspace:bench>>.<<table:bank_operations_by_iban>>
          WHERE iban={iban} and operation_id={operation_id}
        tags:
          name: main-select-row
  - tags:
      phase: main
      type: write
    params:
      ratio: <<write_ratio:9>>
      cl: <<write_cl:LOCAL_QUORUM>>
    statements:
      - insert-main: |
          INSERT INTO  <<keyspace:bench>>.<<table:bank_operations_by_iban>>
          (iban, operation_id, account_code, label, date_operation,
            date_validation, date_correction, amount, original_operation_id)
          VALUES
          ({iban}, {operation_id}, {account_code}, {label}, {date_operation},
            {date_validation}, {date_correction}, {amount}, {original_operation_id})
        idempotent: true
        tags:
          name: insert-main
  - tags:
      phase: main
      type: delete
    params:
      ratio: <<delete_ratio:1>>
      cl: <<delete_cl:LOCAL_QUORUM>>
    statements:
      - delete-main: |
          DELETE FROM  <<keyspace:bench>>.<<table:bank_operations_by_iban>>
          WHERE iban={iban} and operation_id={operation_id}
        idempotent: true
        tags:
          name: delete-main
