# nb -v run driver=cql yaml=cql-mouvements_valides tags=phase:schema host=dsehost
scenarios:
  default:
    - run driver=cql tags==phase:schema threads==1 cycles==UNDEF host=10.101.33.38
    - run driver=cql tags==name:rampup-date cycles=20000000 threads=10 host=10.101.33.38 policy=tiered
    - run driver=cql tags==name:rampup-date cycles=20000000 threads=10 host=10.101.33.38 policy=sorting
    - run driver=cql tags==name:rampup-date cycles=20000000 threads=10 host=10.101.33.38 policy=auto_expunge
    - run driver=cql tags==name:rampup-ts cycles=20000000 threads=10 host=10.101.33.38 policy=tiered
    - run driver=cql tags==name:rampup-ts cycles=20000000 threads=10 host=10.101.33.38 policy=sorting
    - run driver=cql tags==name:rampup-ts cycles=20000000 threads=10 host=10.101.33.38 policy=auto_expunge
bindings:
  key: Hash(); Mod(1000000);
  value: FullNames();
  time: StartingEpochMillis('2019-01-01 00:00:00'); AddHashRange(0,360000000L); Save('time');
  time_date: Load('time') ; EpochMillisToCqlLocalDate();
  time_ts: Load('time') ; ToString(); SaveString('ts');
  time_string: Load('time') ; StringDateWrapper("YYYY-MM-dd'T'HH:mm:ss.SSS'Z'") ; SaveString('time_string');
  search_token: Template('value:{}', FirstNames())
  search_date: Template('time:{}', LoadString('time_string'));
  search_date_range: Template('value:{} AND time:[{} TO NOW]', Combinations('A-Z;a-z;a-z;*'), LoadString('time_string'));
  search_ts: Template('time:[{} TO *]', LoadString('ts'));
  search_ts_range: Template('value:{} AND time:[{} TO *]', Combinations('A-Z;a-z;a-z;*'), LoadString('ts'));
blocks:
  - tags:
      phase: schema
    params:
      prepared: false
    statements:
      - create-keyspace: |
          CREATE KEYSPACE IF NOT EXISTS <<keyspace:bench>>
          WITH replication = {'class': 'NetworkTopologyStrategy', 'Solr':'<<rf:3>>'}
          AND durable_writes = true;
        tags:
          name: create-keyspace
      - create-date-table : |
          CREATE TABLE IF NOT EXISTS <<keyspace:bench>>.<<table:merge_test>>_date_<<policy:tiered>> (
            key int,
            value text,
            time date,
            PRIMARY KEY (key)
          );
        tags:
          name: create-date-table
      - create-ts-table : |
          CREATE TABLE IF NOT EXISTS <<keyspace:bench>>.<<table:merge_test>>_ts_<<policy:tiered>> (
            key int,
            value text,
            time timestamp,
            PRIMARY KEY (key)
          );
        tags:
          name: create-ts-table
  - tags:
      phase: rampup
      name: rampup-date
    params:
      cl: <<cl:LOCAL_QUORUM>>
    statements:
      - insert-date: |
          INSERT INTO <<keyspace:bench>>.<<table:merge_test>>_date_<<policy:tiered>>
          (key, value, time)
          VALUES
          ({key}, {value}, {time_date})
        idempotent: true
        tags:
          name: insert-date
  - tags:
      phase: rampup
      name: rampup-ts
    params:
      cl: <<cl:LOCAL_QUORUM>>
    statements:
      - insert-ts: |
          INSERT INTO <<keyspace:bench>>.<<table:merge_test>>_ts_<<policy:tiered>>
          (key, value, time)
          VALUES
          ({key}, {value}, {time_ts})
        idempotent: true
        tags:
          name: insert-ts
  - tags:
      phase: main
      type: read
      name: read-date
    params:
      ratio: 1
      cl: LOCAL_ONE
      prepared: false
      raw: true
    statements:
      - search-date-token: |
          SELECT COUNT(*) FROM <<keyspace:bench>>.<<table:merge_test>>_date_<<policy:tiered>>
          WHERE solr_query='{search_token}';
        tags:
          name: search-date-token
      - search-date-one: |
          SELECT COUNT(*) FROM <<keyspace:bench>>.<<table:merge_test>>_date_<<policy:tiered>>
          WHERE solr_query='{search_date}';
        tags:
          name: search-date-date
      - search-date-two: |
          SELECT COUNT(*) FROM <<keyspace:bench>>.<<table:merge_test>>_date_<<policy:tiered>>
          WHERE solr_query='{search_date_range}';
        tags:
          name: search-date-date-range
  - tags:
      phase: main
      type: read
      name: read-ts
    params:
      ratio: 1
      cl: LOCAL_ONE
      prepared: false
      raw: true
    statements:
      - search-date-token: |
          SELECT COUNT(*) FROM <<keyspace:bench>>.<<table:merge_test>>_ts_<<policy:tiered>>
          WHERE solr_query='{search_token}';
        tags:
          name: search-date-token
      - search-date-date: |
          SELECT COUNT(*) FROM <<keyspace:bench>>.<<table:merge_test>>_ts_<<policy:tiered>>
          WHERE solr_query='{search_date}';
        tags:
          name: search-date-date
      - search-date-date-range: |
          SELECT COUNT(*) FROM <<keyspace:bench>>.<<table:merge_test>>_ts_<<policy:tiered>>
          WHERE solr_query='{search_date_range}';
        tags:
          name: search-ts-date-range
  - tags:
      phase: main
      type: write
      name: write-date
    params:
      cl: <<cl:LOCAL_QUORUM>>
    statements:
      - insert-date: |
          INSERT INTO <<keyspace:bench>>.<<table:merge_test>>_date_<<policy:tiered>>
          (key, value, time)
          VALUES
          ({key}, {value}, {time_date})
          USING TTL=<<ttl:36000>>;
        idempotent: true
        tags:
          name: insert-date
  - tags:
      phase: main
      type: write
      name: write-ts
    params:
      cl: <<cl:LOCAL_QUORUM>>
    statements:
      - insert-ts: |
          INSERT INTO <<keyspace:bench>>.<<table:merge_test>>_ts_<<policy:tiered>>
          (key, value, time)
          VALUES
          ({key}, {value}, {time_ts})
          USING TTL=<<ttl:36000>>;
        idempotent: true
        tags:
          name: insert-ts
