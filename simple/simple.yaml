# nb -v run driver=cql yaml=cql-mouvements_valides tags=phase:schema host=dsehost
scenarios:
  default:
    - run driver=cql tags==phase:schema threads==1 cycles==UNDEF
    - run driver=cql tags==phase:rampup cycles===TEMPLATE(rampup-cycles,10000000) threads=auto
    - run driver=cql tags==phase:read cycles===TEMPLATE(main-cycles,10000000) threads=auto
bindings:
  key: Hash(); Mod(250000); AlphaNumericString(<<key_length:12>>);
  value: Hash(); HashedLineToString('data/mouvements.txt');
  time: StartingEpochMillis('2019-01-01 00:00:00'); AddHashRange(0,360000000L); EpochMillisToCqlLocalDate();
  time_date:
  time_ts:
  time_id:
  search_1_date:
  search_2_date:
  search_1_ts:
  search_2_ts:
  search_1_id:
  search_2_id:
blocks:
  - tags:
      phase: schema
    params:
      prepared: false
    statements:
      - create-keyspace: |
          CREATE KEYSPACE IF NOT EXISTS <<keyspace:bench>>
          WITH replication = {'class': 'NetworkTopologyStrategy', 'Solr':'<<rf:3>>'}
          AND durable_writes = true;
        tags:
          name: create-keyspace
      - create-date-table : |
          CREATE TABLE IF NOT EXISTS <<keyspace:bench>>.<<table:merge_test>>_date_<<policy:tiered>> (
            key int,
            value text,
            time_date date,
            PRIMARY KEY (key)
          );
        tags:
          name: create-date-table
      - create-ts-table : |
          CREATE TABLE IF NOT EXISTS <<keyspace:bench>>.<<table:merge_test>>_ts_<<policy:tiered>> (
            key int,
            value text,
            time_ts timestamp,
            PRIMARY KEY (key)
          );
        tags:
          name: create-ts-table
      - create-id-table : |
          CREATE TABLE IF NOT EXISTS <<keyspace:bench>>.<<table:merge_test>>_id_<<policy:tiered>> (
            key int,
            value text,
            time_id timeuuid,
            PRIMARY KEY (key)
          );
        tags:
          name: create-id-table
  - tags:
      phase: rampup
      time: date
    params:
      cl: <<cl:LOCAL_QUORUM>>
    statements:
      - insert-date: |
          INSERT INTO <<keyspace:bench>>.<<table:merge_test>>_date_<<policy:tiered>>
          (key, value, time_date)
          VALUES
          ({key}, {value}, {time_date})
        idempotent: true
        tags:
          name: insert-date
  - tags:
      phase: rampup
      time: ts
    params:
      cl: <<cl:LOCAL_QUORUM>>
    statements:
      - insert-ts: |
          INSERT INTO <<keyspace:bench>>.<<table:merge_test>>_ts_<<policy:tiered>>
          (key, value, time_ts)
          VALUES
          ({key}, {value}, {time_ts})
        idempotent: true
        tags:
          name: insert-ts
  - tags:
      phase: rampup
      time: id
    params:
      cl: <<cl:LOCAL_QUORUM>>
    statements:
      - insert-id: |
          INSERT INTO <<keyspace:bench>>.<<table:merge_test>>_id_<<policy:tiered>>
          (key, value, time_id)
          VALUES
          ({key}, {value}, {time_id})
        idempotent: true
        tags:
          name: insert-id
  - tags:
      phase: main
      type: read
      time: date
    params:
      ratio: 1
      cl: LOCAL_ONE
      prepared: false
      raw: true
    statements:
      - search-date-one: |
          SELECT COUNT(*) FROM <<keyspace:bench>>.<<table:merge_test>>_date_<<policy:tiered>>
          WHERE solr_query='{search_1_date}';
        tags:
          name: search-date-one
      - search-date-two: |
          SELECT COUNT(*) FROM <<keyspace:bench>>.<<table:merge_test>>_date_<<policy:tiered>>
          WHERE solr_query='{search_2_date}';
        tags:
          name: search-date-two
  - tags:
      phase: main
      type: read
      time: ts
    params:
      ratio: 1
      cl: LOCAL_ONE
      prepared: false
      raw: true
    statements:
      - search-ts-one: |
          SELECT COUNT(*) FROM <<keyspace:bench>>.<<table:merge_test>>_ts_<<policy:tiered>>
          WHERE solr_query='{search_1_ts}';
        tags:
          name: search-ts-one
      - search-ts-two: |
          SELECT COUNT(*) FROM <<keyspace:bench>>.<<table:merge_test>>_ts_<<policy:tiered>>
          WHERE solr_query='{search_2_ts}';
        tags:
          name: search-ts-two
  - tags:
      phase: main
      type: read
      time: id
    params:
      ratio: 1
      cl: LOCAL_ONE
      prepared: false
      raw: true
    statements:
      - search-ts-one: |
          SELECT COUNT(*) FROM <<keyspace:bench>>.<<table:merge_test>>_id_<<policy:tiered>>
          WHERE solr_query='{search_1_id}';
        tags:
          name: search-ts-one
      - search-ts-two: |
          SELECT COUNT(*) FROM <<keyspace:bench>>.<<table:merge_test>>_id_<<policy:tiered>>
          WHERE solr_query='{search_2_id}';
        tags:
          name: search-ts-two
  - tags:
      phase: main
      type: write
      time: date
    params:
      cl: <<cl:LOCAL_QUORUM>>
    statements:
      - insert-date: |
          INSERT INTO <<keyspace:bench>>.<<table:merge_test>>_date_<<policy:tiered>>
          (key, value, time_date)
          VALUES
          ({key}, {value}, {time_date})
          USING TTL=<<ttl:36000>>;
        idempotent: true
        tags:
          name: insert-date
  - tags:
      phase: main
      type: write
      time: ts
    params:
      cl: <<cl:LOCAL_QUORUM>>
    statements:
      - insert-ts: |
          INSERT INTO <<keyspace:bench>>.<<table:merge_test>>_ts_<<policy:tiered>>
          (key, value, time_ts)
          VALUES
          ({key}, {value}, {time_ts})
          USING TTL=<<ttl:36000>>;
        idempotent: true
        tags:
          name: insert-ts
  - tags:
      phase: main
      type: write
      time: id
    params:
      cl: <<cl:LOCAL_QUORUM>>
    statements:
      - insert-id: |
          INSERT INTO <<keyspace:bench>>.<<table:merge_test>>_id_<<policy:tiered>>
          (key, value, time_id)
          VALUES
          ({key}, {value}, {time_id})
          USING TTL=<<ttl:36000>>;
        idempotent: true
        tags:
          name: insert-id
